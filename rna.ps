%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.2
%%CreationDate: Sun Apr 21 18:46:34 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAAUUCAGAGGAAGAGAAGUCUUGUAUGAAGGUGAAGAGCCAUGUUUGGUAGCCAGGGAUGACUUGCCUAAUUAGAUCUCAUAUGUGCAAAAGUUACUGACAAGUUAACGCUUGAGCCUAUAUAUAUUAGGAUUUCUAGRUAAGCAAGUUGUCCUUCGGCUUGUCUGACUGGCUCUUAUCUUUCAUGCUAGACUUUCCUCUCUUCCAUGCAU\
) } def
/len { sequence length } bind def

/coor [
[97.97657013 831.01214600]
[83.28665161 834.62622070]
[68.19904327 833.52197266]
[54.19188690 827.80755615]
[42.63745117 818.04278564]
[34.66772079 805.18438721]
[31.06349373 790.49206543]
[32.17787552 775.40521240]
[37.90168381 761.40185547]
[47.67416763 749.85394287]
[60.53791046 741.89288330]
[75.23265839 738.29846191]
[76.32759094 723.33850098]
[77.42251587 708.37847900]
[78.51744843 693.41851807]
[79.61237335 678.45855713]
[80.70730591 663.49853516]
[81.80223846 648.53857422]
[82.89716339 633.57861328]
[83.55449677 618.59301758]
[83.77367401 603.59460449]
[83.99284363 588.59619141]
[84.21202087 573.59777832]
[84.43119049 558.59942627]
[76.88068390 545.76043701]
[84.81879425 532.07476807]
[85.03797150 517.07641602]
[85.25714111 502.07800293]
[85.47631836 487.07958984]
[85.69548798 472.08120728]
[85.91466522 457.08279419]
[86.13383484 442.08438110]
[86.35301208 427.08599854]
[86.57218170 412.08758545]
[76.04320526 401.61495972]
[76.05181885 386.40133667]
[87.10788727 375.42855835]
[87.32705688 360.43017578]
[87.54622650 345.43176270]
[87.76540375 330.43338013]
[87.98457336 315.43496704]
[88.20375061 300.43658447]
[88.42292023 285.43817139]
[88.64209747 270.43978882]
[85.59766388 263.70779419]
[88.97564697 255.22425842]
[89.41394043 240.23066711]
[89.85224152 225.23707581]
[82.49013519 212.28915405]
[90.62737274 198.72094727]
[91.06567383 183.72735596]
[81.91923523 168.74888611]
[91.72237396 153.15940857]
[91.94155121 138.16101074]
[92.16072083 123.16261292]
[92.37989807 108.16421509]
[92.48948669 93.16461945]
[92.48948669 78.16461945]
[92.48948669 63.16461563]
[92.48948669 48.16461563]
[92.48948669 33.16461563]
[92.48948669 18.16461754]
[92.48948669 3.16461730]
[92.48948669 -11.83538246]
[92.48948669 -26.83538246]
[92.48948669 -41.83538437]
[92.48948669 -56.83538437]
[92.48948669 -71.83538055]
[92.48948669 -86.83538055]
[84.75218201 -100.63555145]
[92.48948669 -113.36282349]
[92.48948669 -128.36282349]
[84.75218201 -142.16299438]
[92.48948669 -154.89027405]
[92.48948669 -169.89027405]
[92.48948669 -184.89027405]
[92.48948669 -199.89027405]
[92.48948669 -214.89027405]
[92.16073608 -229.88667297]
[91.50341034 -244.87225342]
[90.84607697 -259.85784912]
[82.51145172 -273.30569458]
[89.68358612 -286.35980225]
[89.02625275 -301.34539795]
[88.36891937 -316.33099365]
[87.71158600 -331.31658936]
[87.05426025 -346.30218506]
[86.39692688 -361.28775024]
[85.73959351 -376.27334595]
[84.42619324 -391.21572876]
[82.45924377 -406.08621216]
[80.49230194 -420.95669556]
[68.23193359 -430.56509399]
[66.44900513 -445.67388916]
[75.68469238 -457.30307007]
[73.71775055 -472.17352295]
[71.75080109 -487.04400635]
[69.78385162 -501.91448975]
[67.70831299 -516.77020264]
[65.52429962 -531.61035156]
[54.92559814 -544.12432861]
[60.71760178 -559.46661377]
[76.94198608 -561.85430908]
[86.90850067 -548.83123779]
[80.36444855 -533.79437256]
[82.54846954 -518.95422363]
[86.63105011 -512.79626465]
[84.65433502 -503.88143921]
[86.62127686 -489.01095581]
[88.58822632 -474.14047241]
[90.55517578 -459.27001953]
[102.49677277 -450.44198608]
[104.70336914 -435.38922119]
[95.36277771 -422.92364502]
[97.32971954 -408.05316162]
[99.29666901 -393.18267822]
[109.24166870 -404.41198730]
[124.20534515 -405.45516968]
[135.61225891 -395.71441650]
[136.92530823 -380.77200317]
[127.39197540 -369.19116211]
[112.47567749 -367.60873413]
[100.72518158 -376.93069458]
[101.38251495 -361.94509888]
[102.03984833 -346.95950317]
[102.69718170 -331.97390747]
[103.35451508 -316.98831177]
[104.01184082 -302.00274658]
[104.66917419 -287.01715088]
[112.95677948 -274.64117432]
[105.83166504 -260.51516724]
[106.48899841 -245.52958679]
[107.14633179 -230.54400635]
[109.48261261 -227.90695190]
[110.65924072 -224.00836182]
[110.09766388 -219.40486145]
[107.48948669 -214.89027405]
[107.48948669 -199.89027405]
[107.48948669 -184.89027405]
[107.48948669 -169.89027405]
[107.48948669 -154.89027405]
[115.22678375 -142.16299438]
[107.48948669 -128.36282349]
[107.48948669 -113.36282349]
[115.22678375 -100.63555145]
[107.48948669 -86.83538055]
[107.48948669 -71.83538055]
[107.48948669 -56.83538437]
[107.48948669 -41.83538437]
[107.48948669 -26.83538246]
[107.48948669 -11.83538246]
[107.48948669 3.16461730]
[107.48948669 18.16461754]
[107.48948669 33.16461563]
[107.48948669 48.16461563]
[107.48948669 63.16461563]
[107.48948669 78.16461945]
[107.48948669 93.16461945]
[110.63788605 100.58200836]
[107.37829590 108.38339233]
[107.15911865 123.38179016]
[106.93994904 138.38018799]
[106.72077179 153.37858582]
[115.12962341 163.15626526]
[114.64002991 175.64208984]
[106.05926514 184.16564941]
[105.62097168 199.15925598]
[112.95172882 213.17961121]
[104.84584045 225.67536926]
[104.40753937 240.66896057]
[103.96923828 255.66255188]
[103.64049530 270.65896606]
[103.42131805 285.65734863]
[103.20214844 300.65576172]
[102.98297882 315.65414429]
[102.76380157 330.65255737]
[102.54463196 345.65093994]
[102.32545471 360.64935303]
[102.10628510 375.64773560]
[112.83699799 386.93887329]
[112.40106964 402.14627075]
[101.57057953 412.30676270]
[101.35140991 427.30517578]
[101.13223267 442.30355835]
[100.91306305 457.30197144]
[100.69388580 472.30035400]
[100.47471619 487.29876709]
[100.25553894 502.29714966]
[100.03636932 517.29553223]
[99.81719971 532.29394531]
[107.35202789 546.20568848]
[99.42958832 558.81860352]
[99.21041870 573.81695557]
[98.99124146 588.81536865]
[98.77207184 603.81378174]
[98.55289459 618.81219482]
[100.79843903 622.52056885]
[101.66213989 626.36407471]
[101.27095032 629.89233398]
[99.88489532 632.74212646]
[97.85714722 634.67352295]
[96.76222229 649.63348389]
[95.66728973 664.59350586]
[94.57236481 679.55346680]
[93.47743225 694.51342773]
[92.38249969 709.47344971]
[91.28757477 724.43341064]
[90.19264221 739.39343262]
[104.20745087 745.08905029]
[115.77496338 754.83831787]
[123.76191711 767.68603516]
[127.38582611 782.37353516]
[126.29166412 797.46185303]
[120.58662415 811.47283936]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 208]
[13 207]
[14 206]
[15 205]
[16 204]
[17 203]
[18 202]
[19 201]
[20 196]
[21 195]
[22 194]
[23 193]
[24 192]
[26 190]
[27 189]
[28 188]
[29 187]
[30 186]
[31 185]
[32 184]
[33 183]
[34 182]
[37 179]
[38 178]
[39 177]
[40 176]
[41 175]
[42 174]
[43 173]
[44 172]
[46 171]
[47 170]
[48 169]
[50 167]
[51 166]
[53 163]
[54 162]
[55 161]
[56 160]
[57 158]
[58 157]
[59 156]
[60 155]
[61 154]
[62 153]
[63 152]
[64 151]
[65 150]
[66 149]
[67 148]
[68 147]
[69 146]
[71 144]
[72 143]
[74 141]
[75 140]
[76 139]
[77 138]
[78 137]
[79 133]
[80 132]
[81 131]
[83 129]
[84 128]
[85 127]
[86 126]
[87 125]
[88 124]
[89 123]
[90 116]
[91 115]
[92 114]
[95 111]
[96 110]
[97 109]
[98 108]
[99 106]
[100 105]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF

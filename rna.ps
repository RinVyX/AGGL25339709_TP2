%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.2
%%CreationDate: Sun Apr 21 13:40:59 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAGGACGUGGACGUGGAUGCCGAUAAGAAGGAGCCGUAAGGUACCGGGCGUGGGGAGGGCAGGGGCAGGGACGGGGAUCAGGGGCAGCUGAUCCCCGUCCCUGCCCCUGCCCUCCCCGCGCCCGGUACCUUACGGCUCCUUCUUAUCGGCACAGGGUUUCCGGGCUCUGG\
) } def
/len { sequence length } bind def

/coor [
[88.89884949 276.07037354]
[77.98859406 264.63613892]
[78.44262695 248.83836365]
[89.99157715 238.04960632]
[90.26395416 223.05207825]
[90.53633118 208.05455017]
[83.03141785 195.18888855]
[91.01802826 181.53147888]
[83.51311493 168.66581726]
[91.49972534 155.00840759]
[91.77210236 140.01087952]
[92.04448700 125.01335907]
[92.31686401 110.01583099]
[92.18066406 95.01644897]
[83.94737244 81.50632477]
[91.21743011 68.50650024]
[90.67276001 53.51639175]
[87.46269226 47.67049408]
[87.68109131 41.94658661]
[90.39049530 37.97420120]
[90.39049530 22.97419930]
[90.39049530 7.97419930]
[90.39049530 -7.02580070]
[90.39049530 -22.02580070]
[90.39049530 -37.02579880]
[90.39049530 -52.02579880]
[90.39049530 -67.02580261]
[90.39049530 -82.02580261]
[90.39049530 -97.02580261]
[90.39049530 -112.02580261]
[90.39049530 -127.02580261]
[90.39049530 -142.02580261]
[90.39049530 -157.02580261]
[90.39049530 -172.02580261]
[90.39049530 -187.02580261]
[90.39049530 -202.02580261]
[90.39049530 -217.02580261]
[90.39049530 -232.02580261]
[90.39049530 -247.02580261]
[90.39049530 -262.02578735]
[90.39049530 -277.02578735]
[90.39049530 -292.02578735]
[90.39049530 -307.02578735]
[90.39049530 -322.02578735]
[90.39049530 -337.02578735]
[90.39049530 -352.02578735]
[90.39049530 -367.02578735]
[90.39049530 -382.02578735]
[90.39049530 -397.02578735]
[90.39049530 -412.02578735]
[90.39049530 -427.02578735]
[90.39049530 -442.02578735]
[90.39049530 -457.02578735]
[90.39049530 -472.02578735]
[90.39049530 -487.02578735]
[90.39049530 -502.02578735]
[90.39049530 -517.02581787]
[90.39049530 -532.02581787]
[90.39049530 -547.02581787]
[90.39049530 -562.02581787]
[90.39049530 -577.02581787]
[90.39049530 -592.02581787]
[90.39049530 -607.02581787]
[90.39049530 -622.02581787]
[90.39049530 -637.02581787]
[90.39049530 -652.02581787]
[90.39049530 -667.02581787]
[90.39049530 -682.02581787]
[90.39049530 -697.02581787]
[90.39049530 -712.02581787]
[90.39049530 -727.02581787]
[90.39049530 -742.02581787]
[90.39049530 -757.02581787]
[90.39049530 -772.02581787]
[90.39049530 -787.02581787]
[90.39049530 -802.02581787]
[90.39049530 -817.02581787]
[90.39049530 -832.02581787]
[90.39049530 -847.02581787]
[90.39049530 -862.02581787]
[90.39049530 -877.02581787]
[90.39049530 -892.02581787]
[90.39049530 -907.02581787]
[79.03935242 -918.02246094]
[78.87226105 -933.82586670]
[89.98834991 -945.06011963]
[105.79264069 -945.06011963]
[116.90872192 -933.82586670]
[116.74163055 -918.02246094]
[105.39049530 -907.02581787]
[105.39049530 -892.02581787]
[105.39049530 -877.02581787]
[105.39049530 -862.02581787]
[105.39049530 -847.02581787]
[105.39049530 -832.02581787]
[105.39049530 -817.02581787]
[105.39049530 -802.02581787]
[105.39049530 -787.02581787]
[105.39049530 -772.02581787]
[105.39049530 -757.02581787]
[105.39049530 -742.02581787]
[105.39049530 -727.02581787]
[105.39049530 -712.02581787]
[105.39049530 -697.02581787]
[105.39049530 -682.02581787]
[105.39049530 -667.02581787]
[105.39049530 -652.02581787]
[105.39049530 -637.02581787]
[105.39049530 -622.02581787]
[105.39049530 -607.02581787]
[105.39049530 -592.02581787]
[105.39049530 -577.02581787]
[105.39049530 -562.02581787]
[105.39049530 -547.02581787]
[105.39049530 -532.02581787]
[105.39049530 -517.02581787]
[105.39049530 -502.02578735]
[105.39049530 -487.02578735]
[105.39049530 -472.02578735]
[105.39049530 -457.02578735]
[105.39049530 -442.02578735]
[105.39049530 -427.02578735]
[105.39049530 -412.02578735]
[105.39049530 -397.02578735]
[105.39049530 -382.02578735]
[105.39049530 -367.02578735]
[105.39049530 -352.02578735]
[105.39049530 -337.02578735]
[105.39049530 -322.02578735]
[105.39049530 -307.02578735]
[105.39049530 -292.02578735]
[105.39049530 -277.02578735]
[105.39049530 -262.02578735]
[105.39049530 -247.02580261]
[105.39049530 -232.02580261]
[105.39049530 -217.02580261]
[105.39049530 -202.02580261]
[105.39049530 -187.02580261]
[105.39049530 -172.02580261]
[105.39049530 -157.02580261]
[105.39049530 -142.02580261]
[105.39049530 -127.02580261]
[105.39049530 -112.02580261]
[105.39049530 -97.02580261]
[105.39049530 -82.02580261]
[105.39049530 -67.02580261]
[105.39049530 -52.02579880]
[105.39049530 -37.02579880]
[105.39049530 -22.02580070]
[105.39049530 -7.02580070]
[105.39049530 7.97419930]
[105.39049530 22.97419930]
[105.39049530 37.97420120]
[105.66287231 52.97172546]
[106.20753479 67.96183777]
[114.40187073 80.39976501]
[107.17077637 94.47178650]
[109.62648010 97.49694061]
[110.72033691 101.59825897]
[109.99869537 106.13545990]
[107.31438446 110.28820801]
[107.04200745 125.28573608]
[106.76963043 140.28326416]
[106.49725342 155.28079224]
[113.98268890 169.21917725]
[106.01555634 181.80386353]
[113.50099182 195.74224854]
[105.53385925 208.32693481]
[105.26148224 223.32446289]
[104.98910522 238.32199097]
[116.13868713 249.52297974]
[116.01878357 265.32681274]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 170]
[5 169]
[6 168]
[8 166]
[10 164]
[11 163]
[12 162]
[13 161]
[14 157]
[16 155]
[17 154]
[20 153]
[21 152]
[22 151]
[23 150]
[24 149]
[25 148]
[26 147]
[27 146]
[28 145]
[29 144]
[30 143]
[31 142]
[32 141]
[33 140]
[34 139]
[35 138]
[36 137]
[37 136]
[38 135]
[39 134]
[40 133]
[41 132]
[42 131]
[43 130]
[44 129]
[45 128]
[46 127]
[47 126]
[48 125]
[49 124]
[50 123]
[51 122]
[52 121]
[53 120]
[54 119]
[55 118]
[56 117]
[57 116]
[58 115]
[59 114]
[60 113]
[61 112]
[62 111]
[63 110]
[64 109]
[65 108]
[66 107]
[67 106]
[68 105]
[69 104]
[70 103]
[71 102]
[72 101]
[73 100]
[74 99]
[75 98]
[76 97]
[77 96]
[78 95]
[79 94]
[80 93]
[81 92]
[82 91]
[83 90]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
